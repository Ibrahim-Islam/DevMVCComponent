<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevMVCComponent</name>
    </assembly>
    <members>
        <member name="T:DevMVCComponent.Encryption.Generator.Md5">
            <summary>
                Generates clean MD5 code.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Encryption.Generator.Md5.GenerateCleanMd5(System.String)">
            <summary>
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DevMVCComponent.Encryption.Generator.Md5.GetMd5Hash(System.Security.Cryptography.MD5,System.String)">
            <summary>
            </summary>
            <param name="md5Hash"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:DevMVCComponent.Encryption.Generator.Md5.VerifyMd5Hash(System.Security.Cryptography.MD5,System.String,System.String)">
            <summary>
            </summary>
            <param name="md5Hash"></param>
            <param name="input"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="F:DevMVCComponent.Global.Constants.Changed">
            <summary>
                Changed
            </summary>
        </member>
        <member name="F:DevMVCComponent.Global.Constants.UnChanged">
            <summary>
                UnChanged
            </summary>
        </member>
        <member name="T:DevMVCComponent.Processor.CacheProcessor">
            <summary>
                Default Sliding 2 Hours
                Default Expiration 5 Hours
            </summary>
        </member>
        <member name="F:DevMVCComponent.Processor.CacheProcessor._defaultCacheDependency">
            <summary>
                Will be maintained by each db table as single file single text in a
                specific folder.
            </summary>
        </member>
        <member name="F:DevMVCComponent.Processor.CacheProcessor._defaultSliding">
            <summary>
                Time between inserted and last access
            </summary>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.#ctor">
            <summary>
                Default expiration on +8 hours
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="expiration">in mins</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.#ctor(System.Int32,System.Int32)">
            <summary>
                Instantiate CacheProssor
            </summary>
            <param name="context"></param>
            <param name="expiration">in mins</param>
            <param name="sliding">[in mins] If data is not accessed for certain time , then it will be removed from cache.</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
                Instantiate CacheProssor
            </summary>
            <param name="context"></param>
            <param name="cacheName"></param>
            <param name="expiration">in mins</param>
            <param name="sliding">
                Change Default Sliding: If data is not accessed for certain time , then it will be removed from
                cache. [in mins]
            </param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.#ctor(System.String,System.Int32)">
            <summary>
                Instantiate CacheProssor
            </summary>
            <param name="context"></param>
            <param name="cacheName"></param>
            <param name="expiration">in mins</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object)">
            <summary>
                Save cache. No Expiration and no sliding.
            </summary>
            <param name="key"></param>
            <param name="data"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.String)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="tableName">
                Name of the table to create dependencies in file (AppData\DatabaseTables\table.table). Change
                the file manually if table is updated.
            </param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.Int32)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="expires">[in mins]</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.Int32,System.String)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="expires">[in mins]</param>
            <param name="sliding">[in mins]If data is not accessed for certain time then it will be deleted from the cache memory.</param>
            <param name="tableName">Name of the table for dependency.</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Web.Caching.CacheItemPriority)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="expires">[in mins]</param>
            <param name="sliding">[in mins]If data is not accessed for certain time then it will be deleted from the cache memory.</param>
            <param name="tableName">
                Name of the table to create dependencies in file (AppData\DatabaseTables\table.table). Change
                the file manually if table is updated.
            </param>
            <param name="priority"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan},System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="expires">If put expire then don't put sliding</param>
            <param name="sliding">If data is not accessed for certain time then it will be deleted from the cache memory.</param>
            <param name="cacheDependency">New dependency cache.</param>
            <param name="priority"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.Set(System.String,System.Object,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan},System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
                Save object as cache.
            </summary>
            <param name="key">Key object to look for.</param>
            <param name="data">Save any type of data.</param>
            <param name="expires">If put expire then don't put sliding</param>
            <param name="sliding">If data is not accessed for certain time then it will be deleted from the cache memory.</param>
            <param name="cacheDependency">New dependency cache.</param>
            <param name="priority"></param>
            <param name="onRemoveMethod">on remove method name</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.TableStatusSetChanged(System.String)">
            <summary>
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.TableStatusSetUnChanged(System.String)">
            <summary>
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CacheProcessor.TableStatusCheck(System.String)">
            <summary>
                No update in the table since the cache.
                True : No-Update, False: Updated.
            </summary>
            <param name="table"></param>
            <returns>True : No-Update, False: Updated.</returns>
        </member>
        <member name="T:DevMVCComponent.Config">
            <summary>
                Must setup this class.
            </summary>
        </member>
        <member name="F:DevMVCComponent.Config.AdminEmail">
            <summary>
                System admin email
            </summary>
        </member>
        <member name="F:DevMVCComponent.Config.DeveloperEmail">
            <summary>
                Developer email
            </summary>
        </member>
        <member name="F:DevMVCComponent.Config.Assembly">
            <summary>
                Sets Assembly = Assembly.GetExecutingAssembly();
            </summary>
        </member>
        <member name="F:DevMVCComponent.Config.ApplicationName">
            <summary>
                Running application name
            </summary>
        </member>
        <member name="F:DevMVCComponent.Config.IsNotifyDeveloper">
            <summary>
                Notify Developer on Error if true.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Config.GetApplicationNameHtml">
            <summary>
                Attach application information from the AssemblyInfo given the Assembly = Assembly.GetExecutingAssembly().
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevMVCComponent.Processor.CookieProcessor">
            <summary>
                Set cookies in response
                Retrieve cookies from request.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Remove(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.#ctor(System.String)">
            <summary>
                Pass Base.ControllerContext
            </summary>
            <param name="baseContext">Pass this.HttpContext</param>
            <param name="cookieName">Pass the default cookie name.</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Save(System.Object)">
            <summary>
                Add object to cookies whether exist or not.
            </summary>
            <param name="Object"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Save(System.Object,System.String)">
            <summary>
                Add object to cookies whether exist or not.
                Default expiration is +5 Hours.
            </summary>
            <param name="Object">Pass the object.</param>
            <param name="cookie">Name of the cookie</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Save(System.Object,System.Boolean)">
            <summary>
                Save a single object as cookie.
                Save in Response.
                Default expiration is +5 Hours.
            </summary>
            <param name="Object">Pass the object</param>
            <param name="checkBeforeExist">Don't save if already exist.</param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Save(System.Object,System.String,System.DateTime)">
            <summary>
                Save a single object as cookie.
                Save in Response.
            </summary>
            <param name="Object">Pass the object</param>
            <param name="cookieName">Cookie name , pass null if constructor CookieName is valid.</param>
            <param name="expiration"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Save(System.Object,System.String,System.Boolean,System.DateTime)">
            <summary>
                Save a single object as cookie.
                Save in Response.
            </summary>
            <param name="Object">Pass the object</param>
            <param name="cookieName">Cookie name , pass null if constructor CookieName is valid.</param>
            <param name="checkBeforeExist">True: Don't save if already exist. </param>
            <param name="expiration"></param>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Get">
            <summary>
                Get Default cookie string value.
            </summary>
            <returns>GetDefault cookie string value.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Get(System.String)">
            <summary>
                Get Default cookie string value.
            </summary>
            <returns>GetDefault cookie string value.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Set(System.String,System.String)">
            <summary>
                Save cookie. +5 hours expiration.
            </summary>
            <returns>GetDefault cookie string value.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Set(System.String,System.String,System.DateTime)">
            <summary>
                Save cookie. +5 hours expiration.
            </summary>
            <returns>GetDefault cookie string value.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Read">
            <summary>
                Read cookie from request.
            </summary>
            <returns>Returns string or null.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.Read(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Return object or null.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadString(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Returns string or null.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadString">
            <summary>
                Read cookie from request.
            </summary>
            <returns>Returns string or null.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadBool(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Returns Boolean.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadDecimal(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Returns decimal.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadLong(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Returns long</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadInt(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Returns int.</returns>
        </member>
        <member name="M:DevMVCComponent.Processor.CookieProcessor.ReadDateTime(System.String)">
            <summary>
                Read cookie from request.
            </summary>
            <param name="cookieName"></param>
            <returns>Return Date time or null.</returns>
        </member>
        <member name="M:DevMVCComponent.Database.EntityToString.GetHtmlTableRow(System.Object,System.Nullable{System.Int32})">
            <summary>
                Generating single row of this object.
            </summary>
            <param name="Class"></param>
            <returns></returns>
        </member>
        <member name="T:DevMVCComponent.Pagination.Pagination">
            <summary>
                Generates pagination
            </summary>
        </member>
        <member name="M:DevMVCComponent.Pagination.Pagination.GetPageData``1(System.Linq.IQueryable{``0},System.String,System.Nullable{System.Int32}@,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Boolean)">
            <summary>
                Get pagination data based on the page number with cached pages count.
            </summary>
            <param name="entities">Sent Entities as IQueryable</param>
            <param name="pages">
                Send a ref of integer to get the pages number. It will be generated from method. Use it to generate
                pages. It indicated how many pages exist
            </param>
            <param name="page">Based on the page number it returns data. </param>
            <param name="items">
                How many items should a page contain? (Default is 30 defined in the PageItems Property of the
                class)
            </param>
            <param name="cacheName">Create cache by this exact same name. If null then no cache created.</param>
            <param name="retrivePagesExist">
                If false then no count query will be executed. If yes then count query will only
                generated if needed and not exist in the cache.
            </param>
            <returns>IQueryable data based on the page number.</returns>
        </member>
        <member name="M:DevMVCComponent.Pagination.Pagination.GetPageData``1(System.Linq.IQueryable{``0},DevMVCComponent.Pagination.PaginationInfo,System.String,System.Boolean)">
            <summary>
                Get pagination data based on the page number with cached pages count.
            </summary>
            <param name="entities">Sent Entities as IQueryable</param>
            <param name="pageInfo">
                Send a ref of integer to get the pages number. It will be generated from method. Use it to
                generate pages. It indicated how many pages exist
            </param>
            <param name="cacheName">Create cache by this exact same name. If null then no cache created.</param>
            <param name="retrivePagesExist">
                If false then no count query will be executed. If yes then count query will only
                generated if needed and not exist in the cache.
            </param>
            <returns>IQueryable data based on the page number.</returns>
        </member>
        <member name="M:DevMVCComponent.Pagination.Pagination.GetList(DevMVCComponent.Pagination.PaginationInfo,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
                Generates list items with unordered list with bootstrap pagination.
            </summary>
            <param name="pageInfo"></param>
            <param name="url"></param>
            <param name="content"></param>
            <param name="title"></param>
            <param name="unorderedListClass"></param>
            <param name="withoutUnorderedList"></param>
            <param name="liClass"></param>
            <param name="cacheName"></param>
            <param name="class"></param>
            <param name="maxNumbersOfPagesShow"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:DevMVCComponent.Pagination.Pagination.PageItems">
            <summary>
                Total number of items in a page.
            </summary>
        </member>
        <member name="P:DevMVCComponent.Pagination.PaginationInfo.ItemsInPage">
            <summary>
                Set from user side to indicate the user numbers.
            </summary>
        </member>
        <member name="P:DevMVCComponent.Pagination.PaginationInfo.PagesExists">
            <summary>
                Receive from method
            </summary>
        </member>
        <member name="P:DevMVCComponent.Pagination.PaginationInfo.PageNumber">
            <summary>
                Set from user side. To get the items for that page.
            </summary>
        </member>
        <member name="T:DevMVCComponent.Encryption.Cryptography">
            <summary>
                Not yet implemented
            </summary>
        </member>
        <member name="M:DevMVCComponent.Encryption.Cryptography.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Encryption.Cryptography.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="len"></param>
        </member>
        <member name="M:DevMVCComponent.Encryption.Cryptography.FormatCode(System.String)">
            <summary>
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:DevMVCComponent.Enums.ErrorType">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.ErrorType.High">
            <summary>
                High priority error.
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.ErrorType.Medium">
            <summary>
                Medium priority error.
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.ErrorType.Low">
            <summary>
                Low priority error.
            </summary>
        </member>
        <member name="T:DevMVCComponent.Enums.DateTimeFormatType">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.Date">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.Time">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.DateTimeSimple">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.DateTimeFull">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.DateTimeShort">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.DateTimeFormatType.DateTimeCustom">
            <summary>
            </summary>
        </member>
        <member name="T:DevMVCComponent.Enums.MailingType">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.MailingType.RegularMail">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.MailingType.CarbonCopy">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Enums.MailingType.MailBlindCarbonCopy">
            <summary>
            </summary>
        </member>
        <member name="T:DevMVCComponent.DataTypeFormat.BasicError">
            <summary>
            </summary>
        </member>
        <member name="P:DevMVCComponent.DataTypeFormat.BasicError.OrderId">
            <summary>
            </summary>
        </member>
        <member name="P:DevMVCComponent.DataTypeFormat.BasicError.ErrorMessage">
            <summary>
            </summary>
        </member>
        <member name="P:DevMVCComponent.DataTypeFormat.BasicError.Solution">
            <summary>
            </summary>
        </member>
        <member name="P:DevMVCComponent.DataTypeFormat.BasicError.Link">
            <summary>
            </summary>
        </member>
        <member name="P:DevMVCComponent.DataTypeFormat.BasicError.LinkTitle">
            <summary>
            </summary>
        </member>
        <member name="T:DevMVCComponent.Error.Handler">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor(System.Exception)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor(System.Exception,System.String)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="ex"></param>
            <param name="method">Method name should contains parenthesis.()</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor(System.Exception,System.String,System.String)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="ex"></param>
            <param name="method">Method name should contains parenthesis.()</param>
            <param name="subject">Email subject</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor(System.Exception,System.String,System.Object)">
            <summary>
            </summary>
            <param name="ex"></param>
            <param name="method"></param>
            <param name="entity"></param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.#ctor(System.Exception,System.String,System.String,System.Object)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="ex"></param>
            <param name="method">Method name should contains parenthesis.()</param>
            <param name="subject">Email subject</param>
            <param name="entity">Single entity data that you are trying to save. You can also pass null.</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.HandleBy(System.Exception)">
            <summary>
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.HandleBy(System.Exception,System.String)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="ex"></param>
            <param name="exception"></param>
            <param name="method">Method name should contains parenthesis.()</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.HandleBy(System.Exception,System.String,System.String)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="exception"></param>
            <param name="method">Method name should contains parenthesis.()</param>
            <param name="subject">Email subject</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.HandleBy(System.Exception,System.String,System.Object)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="exception"></param>
            <param name="method">Method name should contains parenthesis.()</param>
            <param name="entity">Single entity data that you are trying to save. You can also pass null.</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.HandleBy(System.Exception,System.String,System.String,System.Object)">
            <summary>
                Sends an email to the developer if run into any errors.
            </summary>
            <param name="exception"></param>
            <param name="method">Method name should contains parenthesis.()</param>
            <param name="subject">Email subject</param>
            <param name="entity">Single entity data that you are trying to save. You can also pass null.</param>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.GetEntityValidationHtml(System.Data.Entity.Validation.DbEntityValidationException,System.String,System.String)">
            <summary>
            </summary>
            <param name="e"></param>
            <param name="methodName"></param>
            <param name="optional"></param>
            <returns></returns>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.GetErrorMsgHtml(System.Exception,System.String,System.String)">
            <summary>
            </summary>
            <param name="e"></param>
            <param name="methodName"></param>
            <param name="optional"></param>
            <returns></returns>
        </member>
        <member name="M:DevMVCComponent.Error.Handler.GenerateErrorBody(System.Exception,System.String@,System.String@,System.String,System.Object)">
            <summary>
            </summary>
            <param name="ex"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="method"></param>
            <param name="entitySingleObject"></param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.#ctor">
            <summary>
                By default:
                UseDefaultCredentials = false;
                EnableSsl = true;
                DeliveryMethod = SmtpDeliveryMethod.Network;
                Timeout = 10000;
            </summary>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="email"></param>
            <param name="password"></param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.ChangeCredentials(System.String,System.String)">
            <summary>
                Change Credentials
            </summary>
            <param name="email"></param>
            <param name="password"></param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.SetupCredentials">
            <summary>
                Setup credentials automatic.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.MailSetup(System.String,System.String)">
            <param name="sender">Your mail address</param>
            <param name="receiver"></param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.QuickSend(System.String,System.String,System.String,DevMVCComponent.Enums.MailingType,System.Boolean)">
            <summary>
                Sends mail asynchronously.
            </summary>
            <param name="to">Comma to seperate multiple email addresses.</param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="type">Regular, CC, BCC</param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.QuickSend(System.String,System.String[],System.String,System.String,DevMVCComponent.Enums.MailingType)">
            <summary>
                Quickly send an email.
            </summary>
            <param name="to"></param>
            <param name="carbonCopyEmails"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="type"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.QuickSend(System.String,System.String,System.String,System.String,System.String,DevMVCComponent.Enums.MailingType)">
            <summary>
                Sends mail asynchronously.
            </summary>
            <param name="to">Comma to seperate multiple email addresses.</param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="from"></param>
            <param name="password"></param>
            <param name="type">Regular, CC, BCC</param>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.SendMailWithAttachments(System.String,System.String,System.String,System.String,DevMVCComponent.Enums.MailingType,System.Boolean)">
            <summary>
            </summary>
            <param name="to"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="fileName"></param>
            <param name="type"></param>
            <param name="searchForCommas"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:DevMVCComponent.Mailer.MailConfig.HostSetup">
            <summary>
                Specific host setup. Must ensure the boolean isHostConfigured = true.
            </summary>
            <param name="host">for example gmail: smtp.gmail.com</param>
            <param name="port">for example gmail enablessl port: 587</param>
        </member>
        <member name="P:DevMVCComponent.Mailer.MailConfig.SenderEmail">
            <summary>
                Setup credentials automatic.
            </summary>
        </member>
        <member name="P:DevMVCComponent.Mailer.MailConfig.SenderEmailPassword">
            <summary>
                Setup credentials automatic.
            </summary>
        </member>
        <member name="P:DevMVCComponent.Mailer.MailConfig.SendAsynchronousEmails">
            <summary>
                Default = true
            </summary>
        </member>
        <member name="P:DevMVCComponent.Mailer.MailConfig.IsConfigured">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Mailer.CustomMailConfig.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
                SSL true
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="T:DevMVCComponent.Mailer.GmailConfig">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Mailer.GmailConfig.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Mailer.GmailConfig.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="email"></param>
            <param name="password"></param>
        </member>
        <member name="M:DevMVCComponent.Mailer.GmailConfig.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="T:DevMVCComponent.Miscellaneous.Extensions.ClassExtention">
            <summary>
                Get the list of classes to exporting format
            </summary>
        </member>
        <member name="M:DevMVCComponent.Miscellaneous.Extensions.ClassExtention.IsEmpty(System.Object)">
            <summary>
                Checks if IsNullOrWhiteSpace.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:DevMVCComponent.Miscellaneous.Extensions.ClassExtention.GetPropertiesNames(System.Object)">
            <summary>
                Returns null if no propertise are found.
            </summary>
            <param name="objectType">Type of any object/class/</param>
            <returns>Returns the list of propertise in the class.</returns>
        </member>
        <member name="M:DevMVCComponent.Miscellaneous.Extensions.ClassExtention.GetProperties(System.Object)">
            <summary>
                Returns null if no propertise are found.
            </summary>
            <param name="objectType">Type of any object/class/</param>
            <returns>Returns the list of propertise in the class.</returns>
        </member>
        <member name="M:DevMVCComponent.Miscellaneous.Extensions.ClassExtention.GetPropertiesValues(System.Object)">
            <summary>
                Returns null if no properties are found.
            </summary>
            <param name="objectType">Type of any object/class/</param>
            <returns>Returns the list of properties with values in the class.</returns>
        </member>
        <member name="T:DevMVCComponent.Starter">
            <summary>
                Must setup this starter class and Config class.
            </summary>
        </member>
        <member name="F:DevMVCComponent.Starter.Error">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Starter.Cookies">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Starter.Caches">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Starter.ErrorCollection">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Starter.Mailer">
            <summary>
                Must re-setup with appropriate developer credentials.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Starter.Setup">
            <summary>
                Setup the component plugin
            </summary>
        </member>
        <member name="T:DevMVCComponent.Error.ErrorCollector">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Error.ErrorCollector.SolutionStateLinkClass">
            <summary>
            </summary>
        </member>
        <member name="F:DevMVCComponent.Error.ErrorCollector.SolutionStateClass">
            <summary>
            </summary>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="def"></param>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.IsExist">
            <summary>
                Is any error exist in the list?
            </summary>
            <returns>Returns true if any error exist.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.Add(System.String,System.String,System.String,System.String)">
            <summary>
                add error message with low priority
            </summary>
            <param name="msg">set your message.</param>
            <param name="quantityTypeIsNotValidPleaseSelectAValidQuantityType"></param>
            <param name="solution"></param>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.AddHigh(System.String,System.String,System.String,System.String)">
            <summary>
                add error message with high priority
            </summary>
            <param name="msg">set your message.</param>
            <param name="solution"></param>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.AddMedium(System.String,System.String,System.String,System.String)">
            <summary>
                add error message with medium priority
            </summary>
            <param name="msg">set your message.</param>
            <param name="solution"></param>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.Add(System.String,DevMVCComponent.Enums.ErrorType,System.String,System.String,System.String)">
            <summary>
                add error message with given priority
            </summary>
            <param name="msg">set your message.</param>
            <param name="type">Type of your error message.</param>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetMessages">
            <summary>
            </summary>
            <returns>Returns all error message as string list.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetErrors">
            <summary>
            </summary>
            <returns>Returns all error message as Error Object.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.Clear">
            <summary>
                Clean counter and clean the error list start from 0.
            </summary>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetMessagesHigh">
            <summary>
            </summary>
            <returns>Returns high error message as string list.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetMessagesLow">
            <summary>
            </summary>
            <returns>Returns low error message as string list.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetMessagesMedium">
            <summary>
            </summary>
            <returns>Returns medium error message as string list.</returns>
        </member>
        <member name="M:DevMVCComponent.Error.ErrorCollector.GetMessagesSorted">
            <summary>
            </summary>
            <returns>Returns all error message as string list of sorted by order id.</returns>
        </member>
    </members>
</doc>
